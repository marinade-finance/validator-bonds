agents:
  queue: "snapshots"

steps:
  # epoch number provided in env or prompted
  - input: "What is the epoch to init settlements for?"
    fields:
      - text: "Epoch"
        key: "epoch"
        format: "[0-9]+"
    if: "build.env('EPOCH') == null"

  - command: "echo 'Epoch is: $$EPOCH'"
    if: "build.env('EPOCH') != null"
  - block: "Confirm to get processed init settlements"
    prompt: "Please review the 'Unblock' if ready to proceed."
    if: "build.env('EPOCH') != null"

  - label: ":hammer_and_wrench: :rust: Build"
    commands:
    - '. "$HOME/.cargo/env"'
    - 'cargo build --release --bin init-settlement'
    artifact_paths:
      - target/release/init-settlement

  - wait: ~

  - label: ":mega: Notification initializing settlements"
    commands:
    - |
      epoch=${EPOCH:-$(buildkite-agent meta-data get epoch)}
      curl "$$DISCORD_WEBHOOK_VALIDATOR_BONDS" -H "Content-Type: application/json" -d '{
        "embeds": [
          {
            "title": "Starting initializing settlements of Validator Bonds ('"$$epoch"').",
            "url": "'"$$BUILDKITE_BUILD_URL"'",
            "color": "8388863"
          }
        ]
      }'

  - label: ":gear: Setup"
    env:
      target_dir: /mnt/storage-1/snapshots
    commands:
    - '. "$HOME/.cargo/env"'
    - 'epoch=$(buildkite-agent meta-data get epoch)'
    - 'buildkite-agent meta-data set epoch "$$epoch"'
    - 'buildkite-agent meta-data set snapshot_dir "."'
    - 'echo "Epoch: $$epoch"'

  - wait: ~

  - command: echo "--> Start of concurrency gate"
    concurrency_group: 'validator-bonds/init-settlements'
    concurrency: 1

  - wait: ~

  - label: ":floppy_disk: :arrow_left: :cloud: Downloading merkle trees"
    env:
      gs_bucket: gs://marinade-validator-bonds-mainnet
    commands:
    - 'snapshot_dir=$(buildkite-agent meta-data get snapshot_dir)'
    - 'epoch=$(buildkite-agent meta-data get epoch)'
    - |
      gcloud storage cp "$$gs_bucket/$$epoch/settlement-merkle-trees.json" "$$snapshot_dir"
      gcloud storage cp "$$gs_bucket/$$epoch/settlements.json" "$$snapshot_dir"
    artifact_paths:
      - "$$snapshot_dir/settlement-merkle-trees.json"
      - "$$snapshot_dir/settlements.json"
  
  - wait: ~

  - label: ":campfire: Create settlements"
    env:
      RUST_LOG: trace
      RUST_BACKTRACE: full
    commands:
    - 'snapshot_dir=$(buildkite-agent meta-data get snapshot_dir)'
    - 'epoch=$(buildkite-agent meta-data get epoch)'
    - 'buildkite-agent artifact download --include-retried-jobs target/release/init-settlement .'
    - 'buildkite-agent artifact download --include-retried-jobs $$snapshot_dir/settlement-merkle-trees.json .'
    - 'buildkite-agent artifact download --include-retried-jobs $$snapshot_dir/settlements.json .'
    - 'chmod +x target/release/init-settlement'
    # TODO: MOVE api from devnet to rpc url
    - |
      ./target/release/init-settlement \
        --rpc-url https://api.devnet.solana.com \
        --input-merkle-tree-collection "$$snapshot_dir/settlement-merkle-trees.json" \
        --input-settlement-collection "$$snapshot_dir/settlements.json" \
        --operator-authority "$$VALIDATOR_BONDS_OPERATOR_AUTHORITY" \
        --fee-payer "$$VALIDATOR_BONDS_FUNDING_WALLET" \
        --epoch "$$epoch"

  - wait: ~

  - command: echo "End of concurrency gate <--"
    concurrency_group: 'validator-bonds/init-settlements'
    concurrency: 1
