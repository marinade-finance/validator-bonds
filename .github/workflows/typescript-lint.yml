name: Cargo lint and test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  # Not needed in CI, should make things a bit faster
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  # Remove unnecessary WASM build artifacts
  WASM_BUILD_CLEAN_TARGET: 1
  # Stripping symbols and optimizing for binary size
  RUSTFLAGS: -C strip=symbols -C opt-level=s

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 50
    steps:
      - name: 🛀🏼 Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-android: 'true'
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Checkout project
        uses: actions/checkout@v4

      - name: ⚙️ Install rust compilation dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install libudev-dev

      - name: 👨‍🔧 Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 👩‍🔧 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 🦿 Install Rust tookchain
        uses: dtolnay/rust-toolchain@1.73.0
        with:
          components: rustfmt, clippy

      - name: 🧠 Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: 🏋️ Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏋🏽‍♂️ Build TypeScript projects
        run: pnpm -r build

      - name: 🧭 Run lint check
        run: |
          pnpm check

      - name: 🧨 Run test
        run: cargo test --release -- --nocapture
