agents:
  queue: "snapshots"

steps:
  - label: ":hammer_and_wrench: :rust: Build"
    commands:
    - '. "$HOME/.cargo/env"'
    - 'cargo build --release --bin snapshot-parser-cli --bin settlement-engine-cli'
    artifact_paths:
      - target/release/snapshot-parser-cli
      - target/release/settlement-engine-cli

  - input: "What is the snapshot directory?"
    fields:
      - text: "Snapshot directory"
        key: "snapshot_dir"
    if: "build.env('SNAPSHOT_DIR') == null"

  - wait: ~

  - label: ":gear: Setup"
    commands:
    - '. "$HOME/.cargo/env"'
    - 'snapshot_dir=${SNAPSHOT_DIR:-$(buildkite-agent meta-data get snapshot_dir)}'
    - 'echo "Snapshot dir: $$snapshot_dir"'
    - 'epoch=$(<<<"$$snapshot_dir" grep -oP "(?<=snapshot-)\d+" || exit 1)'
    - 'echo "Epoch: $$epoch"'
    - 'buildkite-agent meta-data set snapshot_dir "$$snapshot_dir"'
    - 'buildkite-agent meta-data set epoch "$$epoch"'

  - wait: ~

  - command: echo "--> Start of concurrency gate"
    concurrency_group: 'validator-bonds/prepare-claims'
    concurrency: 1

  - wait: ~

  - label: ":microscope: Parse Snapshot"
    commands:
    - 'snapshot_dir=$(buildkite-agent meta-data get snapshot_dir)'
    - 'buildkite-agent artifact download --include-retried-jobs target/release/snapshot-parser-cli .'
    - 'chmod +x target/release/snapshot-parser-cli'
    - |
      ./target/release/snapshot-parser-cli \
        --ledger-path "$$snapshot_dir" \
        --output-validator-meta-collection "$$snapshot_dir/validators.json" \
        --output-stake-meta-collection "$$snapshot_dir/stakes.json"

  - wait: ~

  - label: ":floppy_disk: :arrow_left: :cloud: Fetch past validator data"
    env:
      gs_bucket: gs://marinade-validator-bonds-mainnet
    commands:
    - 'snapshot_dir=$(buildkite-agent meta-data get snapshot_dir)'
    - 'epoch=$(buildkite-agent meta-data get epoch)'
    - 'previous_epoch=$$(epoch - 1)'
    - 'gcloud storage cp "$$gs_bucket/$$previous_epoch/validators.json" "$$snapshot_dir/past-validators.json" || echo "Previous validator data not available!"'

  - label: ":scales: Evaluate Marinade Protected Events"
    env:
      WHITELIST_STAKE_AUTHORITY: stWirqFCf2Uts1JBL1Jsd3r6VBWhgnpdPxCTe1MFjrq,4bZ6o3eUUNXhKuqjdCnCoPAoLgWiuLYixKaxoa8PpiKk,ex9CfkBZZd6Nv9XdnoDmmB45ymbu4arXVk7g5pWnt3N
    commands:
    - 'snapshot_dir=$(buildkite-agent meta-data get snapshot_dir)'
    - 'buildkite-agent artifact download --include-retried-jobs target/release/settlement-engine-cli .'
    - 'chmod +x target/release/settlement-engine-cli'
    - 'past_validators_arg=$( [[ -f $$snapshot_dir/past-validators.json ]] && echo "--past-validator-meta-collection $$snapshot_dir/past-validators.json" )'
    - |
      ./target/release/settlement-engine-cli $past_validators_arg \
        --validator-meta-collection "$$snapshot_dir/validators.json" \
        --stake-meta-collection "$$snapshot_dir/stakes.json" \
        --output-protected-event-collection "$$snapshot_dir/protected-events.json" \
        --output-settlement-collection "$$snapshot_dir/settlements.json" \
        --output-merkle-tree-collection "$$snapshot_dir/settlement-merkle-trees.json" \
        --settlement-config settlement-config.yaml

  - wait: ~

  - label: ":üìì: Generating report"
    commands:
    - 'snapshot_dir=$(buildkite-agent meta-data get snapshot_dir)'
    - './scripts/generate-discord-public-report.bash "$$snapshot_dir/settlements.json" > "$$snapshot_dir/discord-public-report.txt"'

  - wait: ~

  - label: ":floppy_disk: :arrow_right: :cloud: Upload artifacts"
    env:
      gs_bucket: gs://marinade-validator-bonds-mainnet
    commands:
    - 'snapshot_dir=$(buildkite-agent meta-data get snapshot_dir)'
    - 'epoch=$(buildkite-agent meta-data get epoch)'
    - 'gcloud storage cp "$$snapshot_dir/past-validators.json" "$$gs_bucket/$$epoch/" || echo "Previous validator data not available!"''
    - 'gcloud storage cp "$$snapshot_dir/validators.json" "$$gs_bucket/$$epoch/"'
    - 'gcloud storage cp "$$snapshot_dir/stakes.json" "$$gs_bucket/$$epoch/"'
    - 'gcloud storage cp "$$snapshot_dir/protected-events.json" "$$gs_bucket/$$epoch/"'
    - 'gcloud storage cp "$$snapshot_dir/settlements.json" "$$gs_bucket/$$epoch/"'
    - 'gcloud storage cp "$$snapshot_dir/settlement-merkle-trees.json" "$$gs_bucket/$$epoch/"'
    - 'gcloud storage cp "$$snapshot_dir/discord-public-report.txt" "$$gs_bucket/$$epoch/"'

  - wait: ~

  - label: ":mega: Notification"
    commands:
    - |
      epoch=${EPOCH:-$(buildkite-agent meta-data get epoch)}
      curl "$$DISCORD_WEBHOOK_VALIDATOR_BONDS" -H "Content-Type: application/json" -d '{
        "embeds": [
          {
            "title": "Claims for Validator Bonds prepared ('"$$epoch"').",
            "url": "'"$$BUILDKITE_BUILD_URL"'",
            "color": "52224"
          }
        ]
      }'

  - label: ":mega: PSR feed"
    commands:
    - |
      snapshot_dir=$(buildkite-agent meta-data get snapshot_dir)
      report=$(cat "$$snapshot_dir/discord-public-report.txt")
      curl "$$DISCORD_WEBHOOK_PSR_FEED" -H "Content-Type: application/json" -d '{
        "content": "```\n'"$$report"'```",
        "embeds": null,
        "attachments": []
      }'

  - label: "üóëÔ∏è Cleanup"
    commands:
    - 'snapshot_dir=${SNAPSHOT_DIR:-$(buildkite-agent meta-data get snapshot_dir)}'
    - 'echo "Snapshot dir: $$snapshot_dir"'
    - 'rm -r "$$snapshot_dir"'

  - command: echo "End of concurrency gate <--"
    concurrency_group: 'validator-bonds/prepare-claims'
    concurrency: 1
