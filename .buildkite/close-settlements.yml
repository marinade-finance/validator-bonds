agents:
  queue: "snapshots"

steps:
  - command: echo "--> Start of concurrency gate"
    concurrency_group: 'validator-bonds/close-settlements'
    concurrency: 1

  - wait: ~

  - label: ":hammer_and_wrench: :rust: Build"
    commands:
    - '. "$HOME/.cargo/env"'
    - 'cargo build --release --bin close-settlement'
    - 'cargo build --release --bin list-settlement'
    artifact_paths:
      - target/release/close-settlement
      - target/release/list-settlement

  - label: " Loading past settlements data"
    env:
      gs_bucket: gs://marinade-validator-bonds-mainnet
      config_epochs_non_closable: 3 # configured onchain in config
      past_epochs_to_load: 5
    commands:
    - |
      set -x
      current_epoch=$(curl --silent "$$RPC_URL" -X POST -H "Content-Type: application/json" -d '{"jsonrpc":"2.0","id":1, "method":"getEpochInfo"}' | jq '.result.epoch')
      epochs_end_index=$((current_epoch - config_epochs_non_closable))
      epochs_start_index=$((epochs_end_index - past_epochs_to_load))
    - 'mkdir ./merkle-trees/'
    - |
      if [[ $$epochs_start_index -lt 1 ]]; then
        echo "No found any epoch to start to load settlement JSON files"
        exit 1
      fi
    - |
      set -x
      for epoch in $(seq $$epochs_start_index $$epochs_end_index); do
        gcloud storage cp "$$gs_bucket/$$epoch/settlement-merkle-trees.json" "./merkle-trees/$${epoch}_settlement-merkle-trees.json"
      done
    artifact_paths:
      - "./merkle-trees/*"

  - wait: ~

  - label: ":campfire: List past settlements"
    env:
      RUST_LOG: info,solana_transaction_builder_executor=debug,solana_transaction_builder=debug,solana_transaction_executor=debug,list_settlement=debug
    commands:
    - '. "$HOME/.cargo/env"'
    - 'buildkite-agent artifact download --include-retried-jobs "merkle-trees/*" .'
    - 'buildkite-agent artifact download --include-retried-jobs target/release/list-settlement .'
    - 'chmod +x target/release/list-settlement'
    - './target/release/list-settlement -u $$RPC_URL -m ./merkle-trees/* --out ./past-settlements.json'
    artifact_paths:
      - "./past-settlements.json"

  - wait: ~

  - label: ":campfire: Close settlements"
    env:
      RUST_LOG: info,solana_transaction_builder_executor=debug,solana_transaction_builder=debug,solana_transaction_executor=debug,close_settlement=debug
      # RUST_BACKTRACE: full
    commands:
    - '. "$HOME/.cargo/env"'
    - 'prior_build_number=$(($$BUILDKITE_RETRY_COUNT - 1))'
    - 'buildkite-agent artifact download --include-retried-jobs build-report.$$prior_build_number . || true'
    - |
      cp "build-report.$$prior_build_number" "build-report.$$BUILDKITE_RETRY_COUNT" || true
      rm -f "build-report.$$prior_build_number"
      echo "#ATTEMPT $$BUILDKITE_RETRY_COUNT" | tee -a "./build-report.$$BUILDKITE_RETRY_COUNT"
    - 'buildkite-agent artifact download --include-retried-jobs target/release/close-settlement .'
    - 'buildkite-agent artifact download --include-retried-jobs past-settlements.json .'
    - 'chmod +x target/release/close-settlement'
    - |
      set -o pipefail
      ./target/release/close-settlement \
        --rpc-url $$RPC_URL \
        --operator-authority "$$VALIDATOR_BONDS_OPERATOR_AUTHORITY" \
        --fee-payer "$$VALIDATOR_BONDS_SETTLEMENTS_WALLET" \
        --marinade-wallet "$$VALIDATOR_BONDS_FUNDING_WALLET" \
        --past-settlements ./past-settlements.json | tee -a "./build-report.$$BUILDKITE_RETRY_COUNT"
    key: 'close-settlement'
    artifact_paths:
      - "./build-report.*"
    retry:
      automatic:
        - exit_status: 100
          limit: 5

  - label: "Notification setup"
    env:
      gs_bucket: gs://marinade-validator-bonds-mainnet
    commands:
     - 'mkdir ./reports'
     - 'buildkite-agent artifact download --include-retried-jobs "build-report.*" ./reports/'
     - 'report_path="./reports/$(ls -v1 reports/ | tail -n 1)"'
     - '[ -f "$$report_path" ] || echo "No report generated; UNKNOWN ERROR" >> "$$report_path"'
     - 'cp "$$report_path" ./close-report.txt'
     - 'buildkite-agent meta-data set attempts_count "$(grep -c ATTEMPT ./close-report.txt)"'
    artifact_paths:
    - "./close-report.txt"
    key: 'notification'
    depends_on: "close-settlement"
    allow_dependency_failure: true
  
  - wait: ~

  - label: ":mega: Notification settlements closing"
    commands:
    - 'build_result=$(buildkite-agent step get "outcome" --step "close-settlement")'
    - |
      if [[ -z "$$build_result" || "$$build_result" =~ "failed" ]]; then
        notification_result="FAILED"
        notification_color="15158332"
      else
        notification_result="SUCCEEDED"
        notification_color="8388863"
      fi
    - |
      attempts_count=$(buildkite-agent meta-data get attempts_count || echo "UNKNOWN")
      buildkite-agent artifact download --include-retried-jobs close-report.txt . || echo 'UNKNOWN ERROR' > './close-report.txt'
      # TODO: change the discord webhook here to the correct one
      # curl "$$DISCORD_WEBHOOK_VALIDATOR_BONDS" \
      curl "https://discord.com/api/webhooks/1237762124114296923/O-Gv1aBiB4LZy87ppR-87LPVDCBz7591Kcse52GyRUmrU-Y8IVpAjnSuP-ZwpGDLLb88" \
        -F 'payload_json={
            "embeds":[{
              "title": "Close Settlements '"$$notification_result"', '"$$attempts_count"' attempts",
              "url": "'"$$BUILDKITE_BUILD_URL"'",
              "color": "'"$$notification_color"'"
            }]
        }' \
        -F "file1=@./close-report.txt"
    depends_on: "notification"
    allow_dependency_failure: true

  - wait: ~

  - command: echo "End of concurrency gate <--"
    concurrency_group: 'validator-bonds/close-settlements'
    concurrency: 1
