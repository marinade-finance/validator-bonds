/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit'

export type DelegationInfo = {
  /** to whom the stake is delegated */
  voterPubkey: Address
  /** activated stake amount, set at delegate() time */
  stake: bigint
  /** epoch at which this stake was activated, std::Epoch::MAX if is a bootstrap stake */
  activationEpoch: bigint
  /** epoch the stake was deactivated, std::Epoch::MAX if not deactivated */
  deactivationEpoch: bigint
}

export type DelegationInfoArgs = {
  /** to whom the stake is delegated */
  voterPubkey: Address
  /** activated stake amount, set at delegate() time */
  stake: number | bigint
  /** epoch at which this stake was activated, std::Epoch::MAX if is a bootstrap stake */
  activationEpoch: number | bigint
  /** epoch the stake was deactivated, std::Epoch::MAX if not deactivated */
  deactivationEpoch: number | bigint
}

export function getDelegationInfoEncoder(): Encoder<DelegationInfoArgs> {
  return getStructEncoder([
    ['voterPubkey', getAddressEncoder()],
    ['stake', getU64Encoder()],
    ['activationEpoch', getU64Encoder()],
    ['deactivationEpoch', getU64Encoder()],
  ])
}

export function getDelegationInfoDecoder(): Decoder<DelegationInfo> {
  return getStructDecoder([
    ['voterPubkey', getAddressDecoder()],
    ['stake', getU64Decoder()],
    ['activationEpoch', getU64Decoder()],
    ['deactivationEpoch', getU64Decoder()],
  ])
}

export function getDelegationInfoCodec(): Codec<
  DelegationInfoArgs,
  DelegationInfo
> {
  return combineCodec(getDelegationInfoEncoder(), getDelegationInfoDecoder())
}
