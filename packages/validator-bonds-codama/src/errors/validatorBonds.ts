/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from '@solana/kit'
import { VALIDATOR_BONDS_PROGRAM_ADDRESS } from '../programs'

/** InvalidProgramId: Program id in context does not match with the validator bonds id */
export const VALIDATOR_BONDS_ERROR__INVALID_PROGRAM_ID = 0x1770 // 6000
/** InvalidAdminAuthority: Operation requires admin authority signature */
export const VALIDATOR_BONDS_ERROR__INVALID_ADMIN_AUTHORITY = 0x1771 // 6001
/** InvalidWithdrawRequestAuthority: Invalid authority to operate with the withdraw request of validator bond account */
export const VALIDATOR_BONDS_ERROR__INVALID_WITHDRAW_REQUEST_AUTHORITY = 0x1772 // 6002
/** InvalidOperatorAuthority: Operation requires operator authority signature */
export const VALIDATOR_BONDS_ERROR__INVALID_OPERATOR_AUTHORITY = 0x1773 // 6003
/** InvalidVoteAccountProgramId: Provided vote account is not owned by the validator vote program */
export const VALIDATOR_BONDS_ERROR__INVALID_VOTE_ACCOUNT_PROGRAM_ID = 0x1774 // 6004
/** InvalidStakeAccountState: Fail to deserialize the stake account */
export const VALIDATOR_BONDS_ERROR__INVALID_STAKE_ACCOUNT_STATE = 0x1775 // 6005
/** InvalidStakeAccountProgramId: Provided stake account is not owned by the stake account program */
export const VALIDATOR_BONDS_ERROR__INVALID_STAKE_ACCOUNT_PROGRAM_ID = 0x1776 // 6006
/** InvalidSettlementAddress: Fail to create account address for Settlement */
export const VALIDATOR_BONDS_ERROR__INVALID_SETTLEMENT_ADDRESS = 0x1777 // 6007
/** InvalidSettlementAuthorityAddress: Fail to create PDA address for Settlement Authority */
export const VALIDATOR_BONDS_ERROR__INVALID_SETTLEMENT_AUTHORITY_ADDRESS = 0x1778 // 6008
/** InvalidBondsWithdrawerAuthorityAddress: Fail to create PDA address for Bonds Withdrawer Authority */
export const VALIDATOR_BONDS_ERROR__INVALID_BONDS_WITHDRAWER_AUTHORITY_ADDRESS = 0x1779 // 6009
/** InvalidSettlementClaimAddress: Fail to create program address for SettlementClaim */
export const VALIDATOR_BONDS_ERROR__INVALID_SETTLEMENT_CLAIM_ADDRESS = 0x177a // 6010
/** InvalidBondAddress: Fail to create program address for Bond */
export const VALIDATOR_BONDS_ERROR__INVALID_BOND_ADDRESS = 0x177b // 6011
/** WrongStakeAccountWithdrawer: Wrong withdrawer authority of the stake account */
export const VALIDATOR_BONDS_ERROR__WRONG_STAKE_ACCOUNT_WITHDRAWER = 0x177c // 6012
/** InvalidWithdrawRequestAddress: Fail to create program address for WithdrawRequest */
export const VALIDATOR_BONDS_ERROR__INVALID_WITHDRAW_REQUEST_ADDRESS = 0x177d // 6013
/** HundredthBasisPointsOverflow: Value of hundredth basis points is too big */
export const VALIDATOR_BONDS_ERROR__HUNDREDTH_BASIS_POINTS_OVERFLOW = 0x177e // 6014
/** HundredthBasisPointsCalculation: Hundredth basis points calculation failure */
export const VALIDATOR_BONDS_ERROR__HUNDREDTH_BASIS_POINTS_CALCULATION = 0x177f // 6015
/** HundredthBasisPointsParse: Hundredth basis points failure to parse the value */
export const VALIDATOR_BONDS_ERROR__HUNDREDTH_BASIS_POINTS_PARSE = 0x1780 // 6016
/** FailedToDeserializeVoteAccount: Cannot deserialize validator vote account data */
export const VALIDATOR_BONDS_ERROR__FAILED_TO_DESERIALIZE_VOTE_ACCOUNT = 0x1781 // 6017
/** BondChangeNotPermitted: Wrong authority for changing the validator bond account */
export const VALIDATOR_BONDS_ERROR__BOND_CHANGE_NOT_PERMITTED = 0x1782 // 6018
/** StakeNotDelegated: Provided stake cannot be used for bonds, it's not delegated */
export const VALIDATOR_BONDS_ERROR__STAKE_NOT_DELEGATED = 0x1783 // 6019
/** BondStakeWrongDelegation: Provided stake is delegated to a wrong validator vote account */
export const VALIDATOR_BONDS_ERROR__BOND_STAKE_WRONG_DELEGATION = 0x1784 // 6020
/** WithdrawRequestNotReady: Withdraw request has not elapsed the epoch lockup period yet */
export const VALIDATOR_BONDS_ERROR__WITHDRAW_REQUEST_NOT_READY = 0x1785 // 6021
/** SettlementNotExpired: Settlement has not expired yet */
export const VALIDATOR_BONDS_ERROR__SETTLEMENT_NOT_EXPIRED = 0x1786 // 6022
/** SettlementExpired: Settlement has already expired */
export const VALIDATOR_BONDS_ERROR__SETTLEMENT_EXPIRED = 0x1787 // 6023
/** UninitializedStake: Stake is not initialized */
export const VALIDATOR_BONDS_ERROR__UNINITIALIZED_STAKE = 0x1788 // 6024
/** NoStakeOrNotFullyActivated: Stake account is not fully activated */
export const VALIDATOR_BONDS_ERROR__NO_STAKE_OR_NOT_FULLY_ACTIVATED = 0x1789 // 6025
/** UnexpectedRemainingAccounts: Instruction context was provided with unexpected set of remaining accounts */
export const VALIDATOR_BONDS_ERROR__UNEXPECTED_REMAINING_ACCOUNTS = 0x178a // 6026
/** SettlementNotClosed: Settlement has to be closed */
export const VALIDATOR_BONDS_ERROR__SETTLEMENT_NOT_CLOSED = 0x178b // 6027
/** StakeAccountIsFundedToSettlement: Provided stake account has been already funded to a settlement */
export const VALIDATOR_BONDS_ERROR__STAKE_ACCOUNT_IS_FUNDED_TO_SETTLEMENT = 0x178c // 6028
/** ClaimSettlementProofFailed: Settlement claim proof failed */
export const VALIDATOR_BONDS_ERROR__CLAIM_SETTLEMENT_PROOF_FAILED = 0x178d // 6029
/** StakeLockedUp: Provided stake account is locked-up */
export const VALIDATOR_BONDS_ERROR__STAKE_LOCKED_UP = 0x178e // 6030
/** StakeAccountNotBigEnoughToSplit: Stake account is not big enough to be split */
export const VALIDATOR_BONDS_ERROR__STAKE_ACCOUNT_NOT_BIG_ENOUGH_TO_SPLIT = 0x178f // 6031
/** ClaimAmountExceedsMaxTotalClaim: Claiming bigger amount than the max total claim */
export const VALIDATOR_BONDS_ERROR__CLAIM_AMOUNT_EXCEEDS_MAX_TOTAL_CLAIM = 0x1790 // 6032
/** ClaimCountExceedsMaxMerkleNodes: Claim exceeded number of claimable nodes in the merkle tree */
export const VALIDATOR_BONDS_ERROR__CLAIM_COUNT_EXCEEDS_MAX_MERKLE_NODES = 0x1791 // 6033
/** EmptySettlementMerkleTree: Empty merkle tree, nothing to be claimed */
export const VALIDATOR_BONDS_ERROR__EMPTY_SETTLEMENT_MERKLE_TREE = 0x1792 // 6034
/** ClaimingStakeAccountLamportsInsufficient: Provided stake account has not enough lamports to cover the claim */
export const VALIDATOR_BONDS_ERROR__CLAIMING_STAKE_ACCOUNT_LAMPORTS_INSUFFICIENT = 0x1793 // 6035
/** StakeAccountNotFundedToSettlement: Provided stake account is not funded under the settlement */
export const VALIDATOR_BONDS_ERROR__STAKE_ACCOUNT_NOT_FUNDED_TO_SETTLEMENT = 0x1794 // 6036
/** VoteAccountValidatorIdentityMismatch: Validator vote account does not match to provided validator identity signature */
export const VALIDATOR_BONDS_ERROR__VOTE_ACCOUNT_VALIDATOR_IDENTITY_MISMATCH = 0x1795 // 6037
/** VoteAccountMismatch: Bond vote account address does not match with the provided validator vote account */
export const VALIDATOR_BONDS_ERROR__VOTE_ACCOUNT_MISMATCH = 0x1796 // 6038
/** ConfigAccountMismatch: Bond config address does not match with the provided config account */
export const VALIDATOR_BONDS_ERROR__CONFIG_ACCOUNT_MISMATCH = 0x1797 // 6039
/** WithdrawRequestVoteAccountMismatch: Withdraw request vote account address does not match with the provided validator vote account */
export const VALIDATOR_BONDS_ERROR__WITHDRAW_REQUEST_VOTE_ACCOUNT_MISMATCH = 0x1798 // 6040
/** BondAccountMismatch: Bond account address does not match with the stored one */
export const VALIDATOR_BONDS_ERROR__BOND_ACCOUNT_MISMATCH = 0x1799 // 6041
/** SettlementAccountMismatch: Settlement account address does not match with the stored one */
export const VALIDATOR_BONDS_ERROR__SETTLEMENT_ACCOUNT_MISMATCH = 0x179a // 6042
/** RentCollectorMismatch: Rent collector address does not match permitted rent collector */
export const VALIDATOR_BONDS_ERROR__RENT_COLLECTOR_MISMATCH = 0x179b // 6043
/** StakerAuthorityMismatch: Stake account's staker does not match with the provided authority */
export const VALIDATOR_BONDS_ERROR__STAKER_AUTHORITY_MISMATCH = 0x179c // 6044
/** NonBondStakeAuthorities: One or both stake authorities does not belong to bonds program */
export const VALIDATOR_BONDS_ERROR__NON_BOND_STAKE_AUTHORITIES = 0x179d // 6045
/** SettlementAuthorityMismatch: Stake account staker authority mismatches with the settlement authority */
export const VALIDATOR_BONDS_ERROR__SETTLEMENT_AUTHORITY_MISMATCH = 0x179e // 6046
/** StakeDelegationMismatch: Delegation of provided stake account mismatches */
export const VALIDATOR_BONDS_ERROR__STAKE_DELEGATION_MISMATCH = 0x179f // 6047
/** WithdrawRequestAmountTooSmall: Too small non-withdrawn withdraw request amount, cancel and init new one */
export const VALIDATOR_BONDS_ERROR__WITHDRAW_REQUEST_AMOUNT_TOO_SMALL = 0x17a0 // 6048
/** WithdrawRequestAlreadyFulfilled: Withdraw request has been already fulfilled */
export const VALIDATOR_BONDS_ERROR__WITHDRAW_REQUEST_ALREADY_FULFILLED = 0x17a1 // 6049
/** ClaimSettlementMerkleTreeNodeMismatch: Claim settlement merkle tree node mismatch */
export const VALIDATOR_BONDS_ERROR__CLAIM_SETTLEMENT_MERKLE_TREE_NODE_MISMATCH = 0x17a2 // 6050
/** WrongStakeAccountStaker: Wrong staker authority of the stake account */
export const VALIDATOR_BONDS_ERROR__WRONG_STAKE_ACCOUNT_STAKER = 0x17a3 // 6051
/** AlreadyPaused: Requested pause and already Paused */
export const VALIDATOR_BONDS_ERROR__ALREADY_PAUSED = 0x17a4 // 6052
/** NotPaused: Requested resume, but not Paused */
export const VALIDATOR_BONDS_ERROR__NOT_PAUSED = 0x17a5 // 6053
/** ProgramIsPaused: Emergency Pause is Active */
export const VALIDATOR_BONDS_ERROR__PROGRAM_IS_PAUSED = 0x17a6 // 6054
/** InvalidPauseAuthority: Invalid pause authority */
export const VALIDATOR_BONDS_ERROR__INVALID_PAUSE_AUTHORITY = 0x17a7 // 6055
/** MergeMismatchSameSourceDestination: Source and destination cannot be the same for merge operation */
export const VALIDATOR_BONDS_ERROR__MERGE_MISMATCH_SAME_SOURCE_DESTINATION = 0x17a8 // 6056
/** WrongStakeAccountState: Wrong state of the stake account */
export const VALIDATOR_BONDS_ERROR__WRONG_STAKE_ACCOUNT_STATE = 0x17a9 // 6057
/** ValidatorIdentityBondMintMismatch: Validator identity mismatch for bond mint */
export const VALIDATOR_BONDS_ERROR__VALIDATOR_IDENTITY_BOND_MINT_MISMATCH = 0x17aa // 6058
/** InvalidBondMintSupply: Bond mint permits only a single token to exist */
export const VALIDATOR_BONDS_ERROR__INVALID_BOND_MINT_SUPPLY = 0x17ab // 6059
/** OperatorAndPauseAuthorityMismatch: Operation permitted only to operator or pause authority */
export const VALIDATOR_BONDS_ERROR__OPERATOR_AND_PAUSE_AUTHORITY_MISMATCH = 0x17ac // 6060
/** SettlementNotReadyForClaiming: Settlement slots to start claiming not expired yet */
export const VALIDATOR_BONDS_ERROR__SETTLEMENT_NOT_READY_FOR_CLAIMING = 0x17ad // 6061
/** InvalidVoteAccountType: Unsupported vote account type to deserialize */
export const VALIDATOR_BONDS_ERROR__INVALID_VOTE_ACCOUNT_TYPE = 0x17ae // 6062
/** MaxStakeWantedTooLow: Max stake wanted value is lower to minimum configured value */
export const VALIDATOR_BONDS_ERROR__MAX_STAKE_WANTED_TOO_LOW = 0x17af // 6063
/** NoStakeOrNotActivatingOrActivated: Stake account is not activating or activated */
export const VALIDATOR_BONDS_ERROR__NO_STAKE_OR_NOT_ACTIVATING_OR_ACTIVATED = 0x17b0 // 6064
/** BitmapSizeMismatch: Data size mismatch for the bitmap */
export const VALIDATOR_BONDS_ERROR__BITMAP_SIZE_MISMATCH = 0x17b1 // 6065
/** BitmapIndexOutOfBonds: Bitmap index out of bounds */
export const VALIDATOR_BONDS_ERROR__BITMAP_INDEX_OUT_OF_BONDS = 0x17b2 // 6066
/** SettlementClaimsNotInitialized: SettlementClaims account not fully initialized, missing data size */
export const VALIDATOR_BONDS_ERROR__SETTLEMENT_CLAIMS_NOT_INITIALIZED = 0x17b3 // 6067
/** SettlementClaimsTooManyRecords: SettlementClaims records exceed maximum to fit Solana account size */
export const VALIDATOR_BONDS_ERROR__SETTLEMENT_CLAIMS_TOO_MANY_RECORDS = 0x17b4 // 6068
/** SettlementClaimsAlreadyInitialized: SettlementClaims already initialized, no need to increase account size */
export const VALIDATOR_BONDS_ERROR__SETTLEMENT_CLAIMS_ALREADY_INITIALIZED = 0x17b5 // 6069
/** SettlementAlreadyClaimed: Settlement has been already claimed */
export const VALIDATOR_BONDS_ERROR__SETTLEMENT_ALREADY_CLAIMED = 0x17b6 // 6070

export type ValidatorBondsError =
  | typeof VALIDATOR_BONDS_ERROR__ALREADY_PAUSED
  | typeof VALIDATOR_BONDS_ERROR__BITMAP_INDEX_OUT_OF_BONDS
  | typeof VALIDATOR_BONDS_ERROR__BITMAP_SIZE_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__BOND_ACCOUNT_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__BOND_CHANGE_NOT_PERMITTED
  | typeof VALIDATOR_BONDS_ERROR__BOND_STAKE_WRONG_DELEGATION
  | typeof VALIDATOR_BONDS_ERROR__CLAIM_AMOUNT_EXCEEDS_MAX_TOTAL_CLAIM
  | typeof VALIDATOR_BONDS_ERROR__CLAIM_COUNT_EXCEEDS_MAX_MERKLE_NODES
  | typeof VALIDATOR_BONDS_ERROR__CLAIMING_STAKE_ACCOUNT_LAMPORTS_INSUFFICIENT
  | typeof VALIDATOR_BONDS_ERROR__CLAIM_SETTLEMENT_MERKLE_TREE_NODE_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__CLAIM_SETTLEMENT_PROOF_FAILED
  | typeof VALIDATOR_BONDS_ERROR__CONFIG_ACCOUNT_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__EMPTY_SETTLEMENT_MERKLE_TREE
  | typeof VALIDATOR_BONDS_ERROR__FAILED_TO_DESERIALIZE_VOTE_ACCOUNT
  | typeof VALIDATOR_BONDS_ERROR__HUNDREDTH_BASIS_POINTS_CALCULATION
  | typeof VALIDATOR_BONDS_ERROR__HUNDREDTH_BASIS_POINTS_OVERFLOW
  | typeof VALIDATOR_BONDS_ERROR__HUNDREDTH_BASIS_POINTS_PARSE
  | typeof VALIDATOR_BONDS_ERROR__INVALID_ADMIN_AUTHORITY
  | typeof VALIDATOR_BONDS_ERROR__INVALID_BOND_ADDRESS
  | typeof VALIDATOR_BONDS_ERROR__INVALID_BOND_MINT_SUPPLY
  | typeof VALIDATOR_BONDS_ERROR__INVALID_BONDS_WITHDRAWER_AUTHORITY_ADDRESS
  | typeof VALIDATOR_BONDS_ERROR__INVALID_OPERATOR_AUTHORITY
  | typeof VALIDATOR_BONDS_ERROR__INVALID_PAUSE_AUTHORITY
  | typeof VALIDATOR_BONDS_ERROR__INVALID_PROGRAM_ID
  | typeof VALIDATOR_BONDS_ERROR__INVALID_SETTLEMENT_ADDRESS
  | typeof VALIDATOR_BONDS_ERROR__INVALID_SETTLEMENT_AUTHORITY_ADDRESS
  | typeof VALIDATOR_BONDS_ERROR__INVALID_SETTLEMENT_CLAIM_ADDRESS
  | typeof VALIDATOR_BONDS_ERROR__INVALID_STAKE_ACCOUNT_PROGRAM_ID
  | typeof VALIDATOR_BONDS_ERROR__INVALID_STAKE_ACCOUNT_STATE
  | typeof VALIDATOR_BONDS_ERROR__INVALID_VOTE_ACCOUNT_PROGRAM_ID
  | typeof VALIDATOR_BONDS_ERROR__INVALID_VOTE_ACCOUNT_TYPE
  | typeof VALIDATOR_BONDS_ERROR__INVALID_WITHDRAW_REQUEST_ADDRESS
  | typeof VALIDATOR_BONDS_ERROR__INVALID_WITHDRAW_REQUEST_AUTHORITY
  | typeof VALIDATOR_BONDS_ERROR__MAX_STAKE_WANTED_TOO_LOW
  | typeof VALIDATOR_BONDS_ERROR__MERGE_MISMATCH_SAME_SOURCE_DESTINATION
  | typeof VALIDATOR_BONDS_ERROR__NON_BOND_STAKE_AUTHORITIES
  | typeof VALIDATOR_BONDS_ERROR__NO_STAKE_OR_NOT_ACTIVATING_OR_ACTIVATED
  | typeof VALIDATOR_BONDS_ERROR__NO_STAKE_OR_NOT_FULLY_ACTIVATED
  | typeof VALIDATOR_BONDS_ERROR__NOT_PAUSED
  | typeof VALIDATOR_BONDS_ERROR__OPERATOR_AND_PAUSE_AUTHORITY_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__PROGRAM_IS_PAUSED
  | typeof VALIDATOR_BONDS_ERROR__RENT_COLLECTOR_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__SETTLEMENT_ACCOUNT_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__SETTLEMENT_ALREADY_CLAIMED
  | typeof VALIDATOR_BONDS_ERROR__SETTLEMENT_AUTHORITY_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__SETTLEMENT_CLAIMS_ALREADY_INITIALIZED
  | typeof VALIDATOR_BONDS_ERROR__SETTLEMENT_CLAIMS_NOT_INITIALIZED
  | typeof VALIDATOR_BONDS_ERROR__SETTLEMENT_CLAIMS_TOO_MANY_RECORDS
  | typeof VALIDATOR_BONDS_ERROR__SETTLEMENT_EXPIRED
  | typeof VALIDATOR_BONDS_ERROR__SETTLEMENT_NOT_CLOSED
  | typeof VALIDATOR_BONDS_ERROR__SETTLEMENT_NOT_EXPIRED
  | typeof VALIDATOR_BONDS_ERROR__SETTLEMENT_NOT_READY_FOR_CLAIMING
  | typeof VALIDATOR_BONDS_ERROR__STAKE_ACCOUNT_IS_FUNDED_TO_SETTLEMENT
  | typeof VALIDATOR_BONDS_ERROR__STAKE_ACCOUNT_NOT_BIG_ENOUGH_TO_SPLIT
  | typeof VALIDATOR_BONDS_ERROR__STAKE_ACCOUNT_NOT_FUNDED_TO_SETTLEMENT
  | typeof VALIDATOR_BONDS_ERROR__STAKE_DELEGATION_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__STAKE_LOCKED_UP
  | typeof VALIDATOR_BONDS_ERROR__STAKE_NOT_DELEGATED
  | typeof VALIDATOR_BONDS_ERROR__STAKER_AUTHORITY_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__UNEXPECTED_REMAINING_ACCOUNTS
  | typeof VALIDATOR_BONDS_ERROR__UNINITIALIZED_STAKE
  | typeof VALIDATOR_BONDS_ERROR__VALIDATOR_IDENTITY_BOND_MINT_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__VOTE_ACCOUNT_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__VOTE_ACCOUNT_VALIDATOR_IDENTITY_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__WITHDRAW_REQUEST_ALREADY_FULFILLED
  | typeof VALIDATOR_BONDS_ERROR__WITHDRAW_REQUEST_AMOUNT_TOO_SMALL
  | typeof VALIDATOR_BONDS_ERROR__WITHDRAW_REQUEST_NOT_READY
  | typeof VALIDATOR_BONDS_ERROR__WITHDRAW_REQUEST_VOTE_ACCOUNT_MISMATCH
  | typeof VALIDATOR_BONDS_ERROR__WRONG_STAKE_ACCOUNT_STAKER
  | typeof VALIDATOR_BONDS_ERROR__WRONG_STAKE_ACCOUNT_STATE
  | typeof VALIDATOR_BONDS_ERROR__WRONG_STAKE_ACCOUNT_WITHDRAWER

let validatorBondsErrorMessages: Record<ValidatorBondsError, string> | undefined
if (process.env.NODE_ENV !== 'production') {
  validatorBondsErrorMessages = {
    [VALIDATOR_BONDS_ERROR__ALREADY_PAUSED]:
      'Requested pause and already Paused',
    [VALIDATOR_BONDS_ERROR__BITMAP_INDEX_OUT_OF_BONDS]:
      'Bitmap index out of bounds',
    [VALIDATOR_BONDS_ERROR__BITMAP_SIZE_MISMATCH]:
      'Data size mismatch for the bitmap',
    [VALIDATOR_BONDS_ERROR__BOND_ACCOUNT_MISMATCH]:
      'Bond account address does not match with the stored one',
    [VALIDATOR_BONDS_ERROR__BOND_CHANGE_NOT_PERMITTED]:
      'Wrong authority for changing the validator bond account',
    [VALIDATOR_BONDS_ERROR__BOND_STAKE_WRONG_DELEGATION]:
      'Provided stake is delegated to a wrong validator vote account',
    [VALIDATOR_BONDS_ERROR__CLAIM_AMOUNT_EXCEEDS_MAX_TOTAL_CLAIM]:
      'Claiming bigger amount than the max total claim',
    [VALIDATOR_BONDS_ERROR__CLAIM_COUNT_EXCEEDS_MAX_MERKLE_NODES]:
      'Claim exceeded number of claimable nodes in the merkle tree',
    [VALIDATOR_BONDS_ERROR__CLAIMING_STAKE_ACCOUNT_LAMPORTS_INSUFFICIENT]:
      'Provided stake account has not enough lamports to cover the claim',
    [VALIDATOR_BONDS_ERROR__CLAIM_SETTLEMENT_MERKLE_TREE_NODE_MISMATCH]:
      'Claim settlement merkle tree node mismatch',
    [VALIDATOR_BONDS_ERROR__CLAIM_SETTLEMENT_PROOF_FAILED]:
      'Settlement claim proof failed',
    [VALIDATOR_BONDS_ERROR__CONFIG_ACCOUNT_MISMATCH]:
      'Bond config address does not match with the provided config account',
    [VALIDATOR_BONDS_ERROR__EMPTY_SETTLEMENT_MERKLE_TREE]:
      'Empty merkle tree, nothing to be claimed',
    [VALIDATOR_BONDS_ERROR__FAILED_TO_DESERIALIZE_VOTE_ACCOUNT]:
      'Cannot deserialize validator vote account data',
    [VALIDATOR_BONDS_ERROR__HUNDREDTH_BASIS_POINTS_CALCULATION]:
      'Hundredth basis points calculation failure',
    [VALIDATOR_BONDS_ERROR__HUNDREDTH_BASIS_POINTS_OVERFLOW]:
      'Value of hundredth basis points is too big',
    [VALIDATOR_BONDS_ERROR__HUNDREDTH_BASIS_POINTS_PARSE]:
      'Hundredth basis points failure to parse the value',
    [VALIDATOR_BONDS_ERROR__INVALID_ADMIN_AUTHORITY]:
      'Operation requires admin authority signature',
    [VALIDATOR_BONDS_ERROR__INVALID_BOND_ADDRESS]:
      'Fail to create program address for Bond',
    [VALIDATOR_BONDS_ERROR__INVALID_BOND_MINT_SUPPLY]:
      'Bond mint permits only a single token to exist',
    [VALIDATOR_BONDS_ERROR__INVALID_BONDS_WITHDRAWER_AUTHORITY_ADDRESS]:
      'Fail to create PDA address for Bonds Withdrawer Authority',
    [VALIDATOR_BONDS_ERROR__INVALID_OPERATOR_AUTHORITY]:
      'Operation requires operator authority signature',
    [VALIDATOR_BONDS_ERROR__INVALID_PAUSE_AUTHORITY]: 'Invalid pause authority',
    [VALIDATOR_BONDS_ERROR__INVALID_PROGRAM_ID]:
      'Program id in context does not match with the validator bonds id',
    [VALIDATOR_BONDS_ERROR__INVALID_SETTLEMENT_ADDRESS]:
      'Fail to create account address for Settlement',
    [VALIDATOR_BONDS_ERROR__INVALID_SETTLEMENT_AUTHORITY_ADDRESS]:
      'Fail to create PDA address for Settlement Authority',
    [VALIDATOR_BONDS_ERROR__INVALID_SETTLEMENT_CLAIM_ADDRESS]:
      'Fail to create program address for SettlementClaim',
    [VALIDATOR_BONDS_ERROR__INVALID_STAKE_ACCOUNT_PROGRAM_ID]:
      'Provided stake account is not owned by the stake account program',
    [VALIDATOR_BONDS_ERROR__INVALID_STAKE_ACCOUNT_STATE]:
      'Fail to deserialize the stake account',
    [VALIDATOR_BONDS_ERROR__INVALID_VOTE_ACCOUNT_PROGRAM_ID]:
      'Provided vote account is not owned by the validator vote program',
    [VALIDATOR_BONDS_ERROR__INVALID_VOTE_ACCOUNT_TYPE]:
      'Unsupported vote account type to deserialize',
    [VALIDATOR_BONDS_ERROR__INVALID_WITHDRAW_REQUEST_ADDRESS]:
      'Fail to create program address for WithdrawRequest',
    [VALIDATOR_BONDS_ERROR__INVALID_WITHDRAW_REQUEST_AUTHORITY]:
      'Invalid authority to operate with the withdraw request of validator bond account',
    [VALIDATOR_BONDS_ERROR__MAX_STAKE_WANTED_TOO_LOW]:
      'Max stake wanted value is lower to minimum configured value',
    [VALIDATOR_BONDS_ERROR__MERGE_MISMATCH_SAME_SOURCE_DESTINATION]:
      'Source and destination cannot be the same for merge operation',
    [VALIDATOR_BONDS_ERROR__NON_BOND_STAKE_AUTHORITIES]:
      'One or both stake authorities does not belong to bonds program',
    [VALIDATOR_BONDS_ERROR__NO_STAKE_OR_NOT_ACTIVATING_OR_ACTIVATED]:
      'Stake account is not activating or activated',
    [VALIDATOR_BONDS_ERROR__NO_STAKE_OR_NOT_FULLY_ACTIVATED]:
      'Stake account is not fully activated',
    [VALIDATOR_BONDS_ERROR__NOT_PAUSED]: 'Requested resume, but not Paused',
    [VALIDATOR_BONDS_ERROR__OPERATOR_AND_PAUSE_AUTHORITY_MISMATCH]:
      'Operation permitted only to operator or pause authority',
    [VALIDATOR_BONDS_ERROR__PROGRAM_IS_PAUSED]: 'Emergency Pause is Active',
    [VALIDATOR_BONDS_ERROR__RENT_COLLECTOR_MISMATCH]:
      'Rent collector address does not match permitted rent collector',
    [VALIDATOR_BONDS_ERROR__SETTLEMENT_ACCOUNT_MISMATCH]:
      'Settlement account address does not match with the stored one',
    [VALIDATOR_BONDS_ERROR__SETTLEMENT_ALREADY_CLAIMED]:
      'Settlement has been already claimed',
    [VALIDATOR_BONDS_ERROR__SETTLEMENT_AUTHORITY_MISMATCH]:
      'Stake account staker authority mismatches with the settlement authority',
    [VALIDATOR_BONDS_ERROR__SETTLEMENT_CLAIMS_ALREADY_INITIALIZED]:
      'SettlementClaims already initialized, no need to increase account size',
    [VALIDATOR_BONDS_ERROR__SETTLEMENT_CLAIMS_NOT_INITIALIZED]:
      'SettlementClaims account not fully initialized, missing data size',
    [VALIDATOR_BONDS_ERROR__SETTLEMENT_CLAIMS_TOO_MANY_RECORDS]:
      'SettlementClaims records exceed maximum to fit Solana account size',
    [VALIDATOR_BONDS_ERROR__SETTLEMENT_EXPIRED]:
      'Settlement has already expired',
    [VALIDATOR_BONDS_ERROR__SETTLEMENT_NOT_CLOSED]:
      'Settlement has to be closed',
    [VALIDATOR_BONDS_ERROR__SETTLEMENT_NOT_EXPIRED]:
      'Settlement has not expired yet',
    [VALIDATOR_BONDS_ERROR__SETTLEMENT_NOT_READY_FOR_CLAIMING]:
      'Settlement slots to start claiming not expired yet',
    [VALIDATOR_BONDS_ERROR__STAKE_ACCOUNT_IS_FUNDED_TO_SETTLEMENT]:
      'Provided stake account has been already funded to a settlement',
    [VALIDATOR_BONDS_ERROR__STAKE_ACCOUNT_NOT_BIG_ENOUGH_TO_SPLIT]:
      'Stake account is not big enough to be split',
    [VALIDATOR_BONDS_ERROR__STAKE_ACCOUNT_NOT_FUNDED_TO_SETTLEMENT]:
      'Provided stake account is not funded under the settlement',
    [VALIDATOR_BONDS_ERROR__STAKE_DELEGATION_MISMATCH]:
      'Delegation of provided stake account mismatches',
    [VALIDATOR_BONDS_ERROR__STAKE_LOCKED_UP]:
      'Provided stake account is locked-up',
    [VALIDATOR_BONDS_ERROR__STAKE_NOT_DELEGATED]:
      "Provided stake cannot be used for bonds, it's not delegated",
    [VALIDATOR_BONDS_ERROR__STAKER_AUTHORITY_MISMATCH]:
      "Stake account's staker does not match with the provided authority",
    [VALIDATOR_BONDS_ERROR__UNEXPECTED_REMAINING_ACCOUNTS]:
      'Instruction context was provided with unexpected set of remaining accounts',
    [VALIDATOR_BONDS_ERROR__UNINITIALIZED_STAKE]: 'Stake is not initialized',
    [VALIDATOR_BONDS_ERROR__VALIDATOR_IDENTITY_BOND_MINT_MISMATCH]:
      'Validator identity mismatch for bond mint',
    [VALIDATOR_BONDS_ERROR__VOTE_ACCOUNT_MISMATCH]:
      'Bond vote account address does not match with the provided validator vote account',
    [VALIDATOR_BONDS_ERROR__VOTE_ACCOUNT_VALIDATOR_IDENTITY_MISMATCH]:
      'Validator vote account does not match to provided validator identity signature',
    [VALIDATOR_BONDS_ERROR__WITHDRAW_REQUEST_ALREADY_FULFILLED]:
      'Withdraw request has been already fulfilled',
    [VALIDATOR_BONDS_ERROR__WITHDRAW_REQUEST_AMOUNT_TOO_SMALL]:
      'Too small non-withdrawn withdraw request amount, cancel and init new one',
    [VALIDATOR_BONDS_ERROR__WITHDRAW_REQUEST_NOT_READY]:
      'Withdraw request has not elapsed the epoch lockup period yet',
    [VALIDATOR_BONDS_ERROR__WITHDRAW_REQUEST_VOTE_ACCOUNT_MISMATCH]:
      'Withdraw request vote account address does not match with the provided validator vote account',
    [VALIDATOR_BONDS_ERROR__WRONG_STAKE_ACCOUNT_STAKER]:
      'Wrong staker authority of the stake account',
    [VALIDATOR_BONDS_ERROR__WRONG_STAKE_ACCOUNT_STATE]:
      'Wrong state of the stake account',
    [VALIDATOR_BONDS_ERROR__WRONG_STAKE_ACCOUNT_WITHDRAWER]:
      'Wrong withdrawer authority of the stake account',
  }
}

export function getValidatorBondsErrorMessage(
  code: ValidatorBondsError,
): string {
  if (process.env.NODE_ENV !== 'production') {
    return (validatorBondsErrorMessages as Record<ValidatorBondsError, string>)[
      code
    ]
  }

  return 'Error message not available in production bundles.'
}

export function isValidatorBondsError<
  TProgramErrorCode extends ValidatorBondsError,
>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>
  },
  code?: TProgramErrorCode,
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    VALIDATOR_BONDS_PROGRAM_ADDRESS,
    code,
  )
}
